% Simple script agent that prints a script to the standard output.

init module {
	
	beliefs{
		script(1, "Hello, world!") .
		script(2, "I am a rule-based, cognitive agent.") .
		script(3, "I have a simple purpose in life:") .
		script(4, "Print text that is part of my script.") .
		script(5, "For each sentence that is part of my script") .
		script(6, "I print text using a 'printText' action.") .
		script(7, "I keep track of the number of lines") . 
		script(8, "that I have printed so far by means of") .
		script(9, "a percept that is provided by the printing") .
		script(10, "environment that I am using.") .
		script(11, "Bye now, see you next time!") .

		nrOfPrintedLines(0) .
	}

	program{
		if bel( findall(LineNr, script(LineNr, _), Lines), max_list(Lines, Max) )
			then adopt( nrOfPrintedLines(Max) ) .
	}
	
	actionspec{
		% The action printText(Text) expects a string of the form "..." as argument.
		% The action can always be performed and has no other effect than printing
		% the string Text to the standard output.
		printText(X) {
			pre{ true }
			post{ true }
		}
	}

}
	
main module [exit=nogoals] {
	program{
		if goal( nrOfPrintedLines(Count) ),
		   bel( nrOfPrintedLines(LineNr), NextLine is LineNr + 1, script(NextLine, Text) )
		then printText(Text) .
	}
}

event module {
	program{
		if bel( percept( printedText(NewCount) ), nrOfPrintedLines(Count) )
			then delete( nrOfPrintedLines(Count) ) + insert( nrOfPrintedLines(NewCount) ) .
	}
}
