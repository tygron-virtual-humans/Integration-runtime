main: dressAgent{
	knowledge{
		
		%
		% Rules to indicate whether the agent is ready to go. The following "levels of readiness" are distinguished:
		%
		readyToGo(0) :- dressed, wearing(shoes).
		readyToGo(1) :- readyToGo(0), wearing(coat), suitcasePacked.
		readyToGo(2) :- readyToGo(1), holding(suitcase).
		notReadyToGo :- not(readyToGo(L)).
		
		%
		% Rules for reading the paper.
		%
		paperSize(1).
		paperRead :- paperSize(S), currentPage(S).
		
		%
		% Miscellaneous rules.
		%
		wearing(shoes) :- wearing(shoe(left)), wearing(shoe(right)).
		dressed :- wearing(pants), wearing(shirt).
		tableDone :- eaten, lunchPrepared.
	}
	beliefs{
	}
	goals{
		offToWork.
	}
	program{
	
		%
		% The agent might be distracted; it's still early in the morning...
		%
		if bel(true) then gazeOutside.
	
		%
		% Put on pants and shirt.
		%
		if goal(offToWork), bel(not(dressed), washed) then adopt(dressed).
		if goal(offToWork), goal(dressed), bel(not(wearing(pants))) then putOn(pants).
		if goal(offToWork), goal(dressed), bel(not(wearing(shirt))) then putOn(shirt).
		
		%
		% Put on your shoes.
		%
		if goal(offToWork), bel(not(wearing(shoes)), wearing(pants)) then adopt(wearing(shoes)).
		if goal(offToWork), goal(wearing(shoes)) then putOnShoe(left).
		if goal(offToWork), goal(wearing(shoes)) then putOnShoe(right).
		
		%
		% Lay the table, eat and prepare lunch, and unlay the table.
		%
		if goal(offToWork), bel(not(tableLayed), not(eaten)) then layTable.
		if goal(offToWork), bel(tableLayed, not(eaten)) then eat.
		if goal(offToWork), bel(tableLayed, not(lunchPrepared)) then prepareLunch.
		if goal(offToWork), bel(tableDone) then unlayTable.
		
		%
		% Wash yourself.
		%
		if goal(offToWork), bel(not(dressed), not(washed)) then wash.
		if goal(offToWork), bel(eaten, not(teethBrushed)) then brushTeeth.
		
		%
		% Read paper
		%
		if goal(offToWork), bel(not(paperRead)) then adopt(paperRead) + insert(currentPage(0)).
		if goal(offToWork), goal(paperRead) then readPage.
		
		%
		% Pack suitcase
		%
		if goal(offToWork), bel(not(suitcasePacked), lunchPrepared) then packSuitcase.
		
		%
		% Put on your coat.
		%
		if goal(offToWork), bel(not(wearing(coat)), readyToGo(0)) then putOn(coat).
		
		%
		% Grab your suitcase, and if deemed necessary, your umbrella.
		%
		if goal(offToWork), bel(readyToGo(1), not(holding(suitcase))) then grab(suitcase).
		if goal(offToWork), bel(readyToGo(1), weather(rain)) then grab(umbrella).
		
		%
		% Go to work.
		%
		if goal(offToWork), bel(readyToGo(2), not(weather(rain))) then goToWork.
		if goal(offToWork), bel(readyToGo(2), weather(rain), holding(umbrella)) then goToWork.
	}
	actionspec{
		gazeOutside{
			pre{ not(focussed), not(offToWork) }
			post{ focussed, weather(rain) }
		}
		readPage{
			pre{ currentPage(C), paperSize(S), C < S, Cnext is C+1}
			post{ not(currentPage(C)), currentPage(Cnext) }
		}
		grab(O){
			pre{ not(holding(O)) }
			post{ holding(O) }
		}
		wash{
			pre{ not(dressed), not(washed) }
			post{ washed }
		}
		layTable{ 
			pre{ not(tableLayed) }
			post{ tableLayed }
		}
		unlayTable{ 
			pre{ tableLayed }
			post{ not(tableLayed) }
		}
		putOnShoe(X) {
			pre{ not(wearing(shoe(X))) }
			post{ wearing(shoe(X)) }
		}
		putOn(X){
			pre{ not(wearing(X)) }
			post{ wearing(X) }
		}
		eat{
			pre{ not(eaten) }
			post{ eaten }
		}
		brushTeeth{
			pre{ not(teethBrushed), eaten }
			post{ teethBrushed }
		}
		prepareLunch{
			pre{ not(lunchPrepared) }
			post{ lunchPrepared }
		}
		packSuitcase{
			pre{ not(suitcasePacked), lunchPrepared }
			post{ suitcasePacked }
		}
		goToWork{
			pre{ readyToGo(2) }
			post{ offToWork } 
		}
	}
}