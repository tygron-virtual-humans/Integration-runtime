/**
 * GOAL interpreter that facilitates developing and executing GOAL multi-agent
 * programs. Copyright (C) 2011 K.V. Hindriks, W. Pasman
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 */

package goal.core.program.validation.agentfile;

import goal.core.kr.language.Var;
import goal.core.program.NameSpace;
import goal.core.program.rules.Rule;
import goal.core.program.rules.RuleSet;
import goal.core.program.validation.Validator;

import java.util.LinkedHashSet;
import java.util.Set;

/**
 * {@link Validator} for {@link RuleSet}s.<br>
 *
 * Errors and warnings are generated by the {@link RuleValidator} used to
 * validate individual {@link Rule}s.
 *
 * Does not validate any modules that may be used by any of the rules;
 * {@link ModuleValidator} should handle that.<br>
 *
 * @author N.Kraayenbrink
 * @modified K.Hindriks
 *
 */
public class RuleSetValidator extends Validator<RuleSet> {
	/**
	 * The set of global variables that are bound in the rule set that is
	 * validated. This set should be equal to the variables that occur in
	 * parameters of a (closest non-anonymous) parent module.
	 */
	private final Set<Var> boundVar;
	/**
	 * The name space of the parent of the {@link RuleSet} that is validated.
	 */
	private final NameSpace parent;

	/**
	 * Validator for rule sets.
	 *
	 * @param parent
	 *            The name space of the parent of the rule set that is
	 *            validated.
	 * @param boundVar
	 *            Variables that have been bound in the rule set's scope (must
	 *            be module parameters).
	 */
	public RuleSetValidator(NameSpace parent, Set<Var> boundVar) {
		this.parent = parent;
		this.boundVar = new LinkedHashSet<>(boundVar);
	}

	/**
	 * Validates a set of rules by validating each individual rule.
	 *
	 * @param subject
	 *            The set of {@link Rule}s to be validated
	 */
	@Override
	protected void doValidate(RuleSet subject) {
		for (Rule rule : subject) {
			RuleValidator ruleValidator = new RuleValidator(this.parent,
					boundVar);
			ruleValidator.validate(rule, this.mod2g);
			ruleValidator.reportToSuperior(this);
		}
	}
}
